---
- hosts: plex
  become: true

  vars:
    install_nginx: true

  pre_tasks:
    - name: Copy Cert
      ansible.builtin.copy:
        content: "{{ lookup('hashi_vault', 'secret=homelab/data/certificates/wildcard').cert }}"
        dest: /etc/ssl/certs/wildcard.lan.pezlab.dev-certificate.pem
    
    - name: Copy Key
      ansible.builtin.copy:
        content: "{{ lookup('hashi_vault', 'secret=homelab/data/certificates/wildcard').privkey }}"
        dest: /etc/ssl/private/wildcard.lan.pezlab.dev-private_key.pem
    
    - name: Install pre-requisite apt packages
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - curl
        update_cache: yes
        state: latest

    - name: Add the plex apt signing key
      ansible.builtin.apt_key:
        url: https://downloads.plex.tv/plex-keys/PlexSign.key
        state: present

    - name: Add plex repoistory
      ansible.builtin.apt_repository:
        repo: deb https://downloads.plex.tv/repo/deb public main
        state: present
        filename: plexmediaserver.list
    
    - name: Install plex
      ansible.builtin.apt:
        pkg: plexmediaserver
        state: latest
    
    - name: Enable and start plex service
      ansible.builtin.service:
        name: plexmediaserver
        enabled: yes
        state: started
        
  roles:
    - role: geerlingguy.nginx
      vars:
        nginx_remove_default_vhost: true
        nginx_vhosts:
          - listen: "80"
            server_name: "_"
            return: "301 https://$host$request_uri"
            filename: "plex.80.conf"
          - listen: "443 ssl"
            server_name: "plex.lan.pezlab.dev"
            extra_parameters: |
              gzip on;
              gzip_vary on;
              gzip_min_length 1000;
              gzip_proxied any;
              gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
              gzip_disable "MSIE [1-6]\.";
              
              ssl_certificate           /etc/ssl/certs/wildcard.lan.pezlab.dev-certificate.pem;
              ssl_certificate_key       /etc/ssl/private/wildcard.lan.pezlab.dev-private_key.pem;

              ssl_session_cache  builtin:1000  shared:SSL:10m;
              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
              ssl_prefer_server_ciphers off;
              add_header Strict-Transport-Security "max-age=63072000" always;
              ssl_stapling on;
              ssl_stapling_verify on;

              # Forward real ip and host to Plex
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              #When using ngx_http_realip_module change $proxy_add_x_forwarded_for to '$http_x_forwarded_for,$realip_remote_addr'
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
              proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
              proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;

              # Websockets
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "Upgrade";

              # Buffering off send to the client as soon as the data is received from Plex.
              proxy_redirect off;
              proxy_buffering off;
              location / {
                proxy_pass http://localhost:32400;

              }
      when: install_nginx